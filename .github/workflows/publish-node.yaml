name: Publish Node Plugin

on:
  push:
    tags:
      - '@matterlabs/hardhat-zksync-node@*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Setup environment
        run: yarn && yarn build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_NPM_MATTERLABS_AUTOMATION_TOKEN }}
        run: |
          if [[ ${{ github.ref }} == *"beta"* ]]; then
            echo "Publishing package with beta tag"
            npm publish @matterlabs/hardhat-zksync-node --tag beta --workspace=packages/hardhat-zksync-node --access=public
          elif [[ ${{ github.ref }} == *"alpha"* ]]; then
            echo "Publishing package with alpha tag"
            npm publish @matterlabs/hardhat-zksync-node --tag alpha --workspace=packages/hardhat-zksync-node --access=public
          else
            echo "Publishing package with latest tag"
            npm publish @matterlabs/hardhat-zksync-node --tag latest --workspace=packages/hardhat-zksync-node --access=public
          fi

      - name: Create github release from tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ ${{ github.ref }} != *"beta"* ]] && [[ ${{ github.ref }} != *"alpha"* ]]; then
            node scripts/create-release-from-tags/run.js --package hardhat-zksync-node
          else
            echo "Skipping github release creation for beta and alpha tags"
          fi

      - name: Create the MM Message
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh -R matter-labs/hardhat-zksync release view "$GITHUB_REF_NAME" --json tagName,body --template '## {{.tagName}} {{"\n"}}{{.body}}' > ./release_info
          jq --null-input --arg text "$(cat ./release_info)" '{"text": $text}' > mattermost.json

      - uses: mattermost/action-mattermost-notify@master
        env:
          MATTERMOST_USERNAME: "Hardhat Release Bot"
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_URL }}

